{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2f4744e8aa10d5446008","webpack:///./src/index.js","webpack:///./src/socket.js","webpack:///./src/emit.js"],"names":["module","exports","Socket","opts","options","autoConnect","url","connect","reconnect","reconnectionAttempts","socket","WebSocket","onConnect","addEventListener","close","raOption","hasOwnProperty","parseInt","reconnectTries","isNaN","message","debug","send","ce","CustomEvent","detail","dispatchEvent","Event","onDisconnect","err","onError","onMessage","shouldAttemptReconnect","setTimeout","reconnectWait","log","arguments","Emit","delegate","document","createDocumentFragment","forEach","f"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CAA,OAAOC,OAAP,GAAiB;AACfC;AADe,CAAjB,C;;;;;;;;;;;;;;;AChDA;;;;;;;;;;;;IAEqBA,M;;;AAEnB,kBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAGhB,UAAKC,OAAL,GAAeD,QAAQ,EAAvB;;AAEA;AACA,UAAKC,OAAL,CAAaC,WAAb,GAA2B,MAAKD,OAAL,CAAaC,WAAb,IAA4B,IAAvD;;AAEA,QAAG,CAAC,MAAKD,OAAL,CAAaE,GAAjB,EAAsB,MAAM,wBAAN;;AAEtB,QAAG,MAAKF,OAAL,CAAaC,WAAb,KAA6B,IAAhC,EAAsC;AACpC,YAAKE,OAAL,CAAa,MAAKH,OAAlB;AACD;AAZe;AAajB;;;;4BAEOD,I,EAAM;AAAA;;AAEZ;AACA,UAAI,CAAC,KAAKK,SAAV,EAAsB;AACpB,aAAKA,SAAL,GAAiB,KAAKJ,OAAL,CAAaI,SAAb,IAA0B,KAA3C;AACD;;AAED,UAAI,CAAC,KAAKC,oBAAV,EAAiC;AAC/B,aAAKA,oBAAL,GAA4B,CAA5B;AACD;;AAED;AACA,WAAKC,MAAL,GAAc,IAAIC,SAAJ,CAAcR,KAAKG,GAAnB,CAAd;;AAEA,UAAG,OAAO,KAAKM,SAAZ,KAA0B,UAA7B,EAAyC;AACvC,aAAKF,MAAL,CAAYG,gBAAZ,CAA6B,MAA7B,EAAqC,YAAM;AACzC,iBAAKD,SAAL;AACD,SAFD;AAGD;;AAED,aAAO,IAAP;AACD;;;iCAEY;;AAEX,WAAKJ,SAAL,GAAiB,KAAjB,CAFW,CAEa;AACxB,WAAKE,MAAL,CAAYI,KAAZ;AACD;;;6CAEwB;AACvB,UAAI,KAAKN,SAAL,GAAiB,KAArB,EAA6B;AAC3B,eAAO,KAAP;AACD;;AAED,UAAIO,iBAAJ;;AAEA,UAAI,KAAKX,OAAL,CAAaY,cAAb,CAA4B,gBAA5B,CAAJ,EAAoD;AAClD,YAAID,YAAWE,SAAS,KAAKb,OAAL,CAAac,cAAtB,EAAsC,EAAtC,CAAf;;AAEA,YAAIC,MAAMJ,SAAN,CAAJ,EAAsB;AACpB,iBAAO,IAAP;AACD,SAFD,MAGK,IAAIA,YAAW,KAAKN,oBAApB,EAA2C;AAC9C,iBAAO,KAAP;AACD;AACF;;AAED,aAAO,IAAP;AACD;;AAED;;;;gCACYW,O,EAAS;AACnB,WAAKC,KAAL,CAAW,iBAAX,EAA8BD,OAA9B;;AAEA,WAAKV,MAAL,CAAYY,IAAZ,CAAiBF,OAAjB;AACD;;;8BAESA,O,EAAS;AACjB,WAAKC,KAAL,CAAW,kBAAX,EAA+BD,OAA/B;;AAEA;AACA;AACA,UAAIG,KAAK,IAAIC,WAAJ,CAAgB,iBAAhB,EAAmC,EAACC,QAAQL,OAAT,EAAnC,CAAT;AACA,WAAKM,aAAL,CAAmBH,EAAnB;AACD;;;gCAEW;AAAA;;AACV,WAAKF,KAAL,CAAW,0CAAX;;AAEA,UAAIE,KAAK,IAAII,KAAJ,CAAU,iBAAV,CAAT;AACA,WAAKD,aAAL,CAAmBH,EAAnB;;AAEA;AACA,WAAKb,MAAL,CAAYG,gBAAZ,CAA6B,OAA7B,EAAsC,YAAM;AAC1C,eAAKe,YAAL;AACD,OAFD;;AAIA,WAAKlB,MAAL,CAAYG,gBAAZ,CAA6B,OAA7B,EAAsC,UAACgB,GAAD,EAAS;AAC7C,eAAKC,OAAL,CAAaD,GAAb;AACD,OAFD;;AAIA,WAAKnB,MAAL,CAAYG,gBAAZ,CAA6B,SAA7B,EAAwC,UAACO,OAAD,EAAa;AACnD,eAAKW,SAAL,CAAeX,OAAf;AACD,OAFD;AAGD;;;4BAEOS,G,EAAK;AACX,WAAKR,KAAL,CAAW,OAAX,EAAoBQ,GAApB;;AAEA,UAAIN,KAAK,IAAIC,WAAJ,CAAgB,eAAhB,EAAiC,EAACC,QAAQI,GAAT,EAAjC,CAAT;AACA,WAAKH,aAAL,CAAmBH,EAAnB;AACD;;;mCAEc;AAAA;;AACb,WAAKF,KAAL,CAAW,cAAX;;AAEA,UAAIE,KAAK,IAAII,KAAJ,CAAU,oBAAV,CAAT;AACA,WAAKD,aAAL,CAAmBH,EAAnB;;AAEA;AACA,UAAG,KAAKS,sBAAL,OAAkC,IAArC,EAA2C;AACzC,aAAKX,KAAL,CAAW,sBAAX;;AAEAY,mBAAW,YAAM;AACf,iBAAKxB,oBAAL,IAA6B,CAA7B;;AAEA,iBAAKF,OAAL,CAAa,OAAKH,OAAlB;AACD,SAJD,EAIG,KAAKA,OAAL,CAAa8B,aAAb,IAA8B,CAJjC;AAKD;AACF;;;0BAEKd,O,EAAS;AACb,UAAI,KAAKhB,OAAL,CAAaiB,KAAb,KAAuB,IAA3B,EAAkC;AAAA;;AAChC,6BAAQc,GAAR,kBAAY,WAAZ,oCAA4BC,SAA5B;AACD;AACF;;;;;;kBApIkBlC,M;;;;;;;;;;;;;;;ICFAmC,I,GACnB,gBAAc;AAAA;;AAAA;;AACZ,MAAIC,WAAWC,SAASC,sBAAT,EAAf;AACA,GACE,kBADF,EAEE,eAFF,EAGE,qBAHF,EAIEC,OAJF,CAIU,UAACC,CAAD,EAAO;AACf,UAAKA,CAAL,IAAU,YAAW;AACnBJ,eAASI,CAAT;AACD,KAFD;AAGD,GARD;AASD,C;;kBAZkBL,I","file":"socket-client.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"socket-client\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"socket-client\"] = factory();\n\telse\n\t\troot[\"socket-client\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2f4744e8aa10d5446008","import { default as Socket } from './socket.js';\n\n/*\nimport Emit from './emit';\n\nclass Emitter extends Emit {\n  constructor() {\n    super();\n  }\n\n  trigger(eventName, data) {\n    let ce = new CustomEvent(eventName, {'detail': data});\n    this.dispatch(ce);\n  }\n}\n\nvar emitterInstance = new Emitter();\n\nexport function SocketWorker(socketOptions) {\n  if( !window.Worker ) {\n    throw new Error(\"no Worker object found on window\");\n    return;\n  }\n\n  let socketWorker = new Worker('./src/woker.js');\n  socketWorker.onmessage = messageHandler;\n\n  let optionsMessage = { \n    'type' : 'options',\n    'data': socketOptions\n  };\n\n  socketWorker.postMessage(JSON.stringify(optionsMessage));\n\n  return emitterInstance;\n}\n\n\nfunction messageHandler($e) {\n\n  let messageObj = JSON.parse($e);\n  let eventName = messageObj.type;\n  let data = messageObj.payload;\n\n  emitterInstance.trigger(eventName, data);\n}\n*/\n\nmodule.exports = {\n  Socket\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Emit from './emit';\n\nexport default class Socket extends Emit {\n\n  constructor(opts) {\n    super();\n\n    this.options = opts || {};\n\n    // if the user doesn't pass autoconnect then default it to true\n    this.options.autoConnect = this.options.autoConnect || true;\n\n    if(!this.options.url) throw \"No Socket URL Provided\";\n\n    if(this.options.autoConnect === true) {\n      this.connect(this.options);\n    }\n  }\n\n  connect(opts) {\n\n    // set our own value as to not mutate the users wishes\n    if( !this.reconnect ) {\n      this.reconnect = this.options.reconnect || false;\n    }\n\n    if( !this.reconnectionAttempts ) {\n      this.reconnectionAttempts = 0;\n    }\n\n    // @TODO add error handleing around protocols\n    this.socket = new WebSocket(opts.url);\n\n    if(typeof this.onConnect === \"function\") {\n      this.socket.addEventListener('open', () => {\n        this.onConnect();\n      });\n    }\n\n    return this;\n  }\n\n  disconnect() {\n\n    this.reconnect = false; // prevent the reconnect logic\n    this.socket.close();\n  }\n\n  shouldAttemptReconnect() {\n    if( this.reconnect = false ) {\n      return false;\n    }\n\n    let raOption;\n\n    if( this.options.hasOwnProperty('reconnectTries') ) {\n      let raOption = parseInt(this.options.reconnectTries, 10);\n      \n      if( isNaN(raOption) ) {\n        return true;\n      }\n      else if( raOption > this.reconnectionAttempts ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // TODO add support for encoding different message types\n  sendMessage(message) {\n    this.debug(\"Sending Message\", message);\n\n    this.socket.send(message);\n  }\n\n  onMessage(message) {\n    this.debug(\"Message Received\", message);\n\n    // @TODO determine if we need to strip any of the message event data beore\n    // creating custom event\n    let ce = new CustomEvent('socket::message', {detail: message});\n    this.dispatchEvent(ce);\n  }\n\n  onConnect() {\n    this.debug('connection established, onConnect called');\n\n    let ce = new Event('socket::connect');\n    this.dispatchEvent(ce);\n\n    // setup the rest of our event handlers\n    this.socket.addEventListener('close', () => {\n      this.onDisconnect();\n    });\n\n    this.socket.addEventListener('error', (err) => {\n      this.onError(err);\n    });\n\n    this.socket.addEventListener('message', (message) => {\n      this.onMessage(message);\n    });\n  }\n\n  onError(err) {\n    this.debug('error', err);\n\n    let ce = new CustomEvent('socket::error', {detail: err});\n    this.dispatchEvent(ce);\n  }\n\n  onDisconnect() {\n    this.debug(\"Disconnected\");\n\n    let ce = new Event('socket::disconnect');\n    this.dispatchEvent(ce);\n\n    //handle reconnect logic\n    if(this.shouldAttemptReconnect() === true) {\n      this.debug('Attempting Reconnect');\n\n      setTimeout(() => {\n        this.reconnectionAttempts += 1;\n\n        this.connect(this.options);\n      }, this.options.reconnectWait || 0);\n    }\n  }\n\n  debug(message) {\n    if( this.options.debug === true ) {\n      console.log(\"ws::debug\", ...arguments);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/socket.js","export default class Emit {\n  constructor() {\n    var delegate = document.createDocumentFragment();\n    [\n      'addEventListener',\n      'dispatchEvent',\n      'removeEventListener'\n    ].forEach((f) => {\n      this[f] = (...xs) => {\n        delegate[f](...xs);\n      };\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/emit.js"],"sourceRoot":""}